{"ast":null,"code":"var _jsxFileName = \"/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/App.tsx\";\nimport React, { createRef } from 'react';\nimport { AllPurposeButton, RegularButton, IndividuallyTypedButton } from 'components';\n\nfunction map(array, callback) {\n  return array.forEach(callback);\n}\n\n;\nconst addOne = map([1, 2, 3], s => s + 1);\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.onClickButtonRef = createRef();\n    this.reactLinkRef = createRef();\n    this.externalLinkRef = createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App p1 flex flex-col justify-center items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"my\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Using Typescript with React\"), React.createElement(AllPurposeButton, {\n      className: \"Button pointer mb1\",\n      ariaLabel: \"Click to alert hola mundo\",\n      onClick: () => alert('hola mundo!'),\n      elemRef: this.onClickButtonRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"AllPurposeButton with onClick\")), React.createElement(IndividuallyTypedButton, {\n      type: \"button\",\n      className: \"Button pointer mb1\",\n      ariaLabel: \"Click to alert hola mundo\",\n      onClick: () => alert('hola mundo!'),\n      elemRef: this.onClickButtonRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"IndividuallyTypedButton\")), React.createElement(RegularButton, {\n      type: \"button\",\n      className: \"Button pointer mb1\",\n      ariaLabel: \"Click to alert hola mundo\",\n      onClick: () => alert('hola mundo!'),\n      elemRef: this.onClickButtonRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Regular Button\")));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/App.tsx"],"names":["React","createRef","AllPurposeButton","RegularButton","IndividuallyTypedButton","map","array","callback","forEach","addOne","s","App","Component","onClickButtonRef","reactLinkRef","externalLinkRef","render","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,uBAA1C,QAAyE,YAAzE;;AAGA,SAASC,GAAT,CAAgBC,KAAhB,EAAiCC,QAAjC,EAA6D;AAC3D,SAAOD,KAAK,CAACE,OAAN,CAAcD,QAAd,CAAP;AACD;;AAAA;AAED,MAAME,MAAM,GAAGJ,GAAG,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAYK,CAAC,IAAIA,CAAC,GAAG,CAArB,CAAlB;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,gBADgC,GACbZ,SAAS,EADI;AAAA,SAEhCa,YAFgC,GAEjBb,SAAS,EAFQ;AAAA,SAGhCc,eAHgC,GAGdd,SAAS,EAHK;AAAA;;AAKhCe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEI,oBAAC,gBAAD;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAGE,MAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,aAAD,CAHtB;AAIE,MAAA,OAAO,EAAE,KAAKJ,gBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCANF,CAFJ,EAUI,oBAAC,uBAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,SAAS,EAAC,2BAHZ;AAIE,MAAA,OAAO,EAAE,MAAMI,KAAK,CAAC,aAAD,CAJtB;AAKE,MAAA,OAAO,EAAE,KAAKJ,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPF,CAVJ,EAmBI,oBAAC,aAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,SAAS,EAAC,2BAHZ;AAIE,MAAA,OAAO,EAAE,MAAMI,KAAK,CAAC,aAAD,CAJtB;AAKE,MAAA,OAAO,EAAE,KAAKJ,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CAnBJ,CADF;AA+BD;;AArC+B;;AAsCjC;AAED,eAAeF,GAAf","sourcesContent":["import React, { createRef } from 'react';\nimport { AllPurposeButton, RegularButton, IndividuallyTypedButton } from 'components';\nimport { Link } from 'react-router-dom';\n\nfunction map<T>(array: Array<T>, callback: (item: T) => any) {\n  return array.forEach(callback);\n};\n\nconst addOne = map([1, 2, 3], s => s + 1);\n\nclass App extends React.Component {\n  onClickButtonRef = createRef<HTMLButtonElement>();\n  reactLinkRef = createRef<Link>();\n  externalLinkRef = createRef<HTMLAnchorElement>();\n\n  render() {\n    return (\n      <div className=\"App p1 flex flex-col justify-center items-center\">\n        <h1 className=\"my\">Using Typescript with React</h1>\n          <AllPurposeButton\n            className=\"Button pointer mb1\"\n            ariaLabel=\"Click to alert hola mundo\"\n            onClick={() => alert('hola mundo!')}\n            elemRef={this.onClickButtonRef}\n          >\n            <p>AllPurposeButton with onClick</p>\n          </AllPurposeButton>\n          <IndividuallyTypedButton\n            type=\"button\"\n            className=\"Button pointer mb1\"\n            ariaLabel=\"Click to alert hola mundo\"\n            onClick={() => alert('hola mundo!')}\n            elemRef={this.onClickButtonRef}\n          >\n            <p>IndividuallyTypedButton</p>\n          </IndividuallyTypedButton>\n          <RegularButton\n            type=\"button\"\n            className=\"Button pointer mb1\"\n            ariaLabel=\"Click to alert hola mundo\"\n            onClick={() => alert('hola mundo!')}\n            elemRef={this.onClickButtonRef}\n          >\n            <p>Regular Button</p>\n          </RegularButton>\n      </div>\n    );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}