{"ast":null,"code":"var _jsxFileName = \"/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/components/Button.tsx\";\nimport React, { Component } from 'react';\nimport linkIsExternal from 'utils/(to)';\nimport { Link } from 'react-router-dom';\nconst defaultProps = {\n  className: '',\n  type: 'button',\n  to: '',\n  onClick: () => {}\n};\n\nclass Button extends Component {\n  render() {\n    const isInternalLink = 'internalTo' in this.props;\n    const isExternalLink = 'externalTo' in this.props;\n    const isButton = 'onClick' in this.props;\n\n    if (isInternalLink) {\n      this.props.internalTo;\n    }\n\n    if (to) {\n      if (linkIsExternal(to)) {\n        return React.createElement(\"a\", {\n          href: to,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          \"aria-label\": ariaLabel,\n          ref: elemRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, text ? text : children));\n      } else {\n        return React.createElement(Link, {\n          to: to,\n          \"aria-label\": ariaLabel,\n          ref: elemRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, text ? text : children));\n      }\n    }\n\n    return React.createElement(\"button\", {\n      className: className,\n      \"aria-label\": ariaLabel,\n      onClick: onClick,\n      type: type,\n      ref: elemRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, text ? text : children);\n  }\n\n}\n\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/components/Button.tsx"],"names":["React","Component","linkIsExternal","Link","defaultProps","className","type","to","onClick","Button","render","isInternalLink","props","isExternalLink","isButton","internalTo","ariaLabel","elemRef","text","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAwD,OAAxD;AAEA,OAAOC,cAAP,MAA2B,YAA3B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAkCA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,IAAI,EAAE,QAFa;AAGnBC,EAAAA,EAAE,EAAE,EAHe;AAInBC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAJE,CAArB;;AAOA,MAAMC,MAAN,SAAqBR,SAArB,CAAsC;AAGpCS,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,gBAAgB,KAAKC,KAA5C;AACA,UAAMC,cAAc,GAAG,gBAAgB,KAAKD,KAA5C;AACA,UAAME,QAAQ,GAAG,aAAa,KAAKF,KAAnC;;AAGA,QAAID,cAAJ,EAAoB;AAClB,WAAKC,KAAL,CAAWG,UAAX;AACD;;AAED,QAAIR,EAAJ,EAAQ;AACN,UAAIL,cAAc,CAACK,EAAD,CAAlB,EAAwB;AACtB,eACE;AACE,UAAA,IAAI,EAAEA,EADR;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,GAAG,EAAC,qBAHN;AAIE,wBAAYS,SAJd;AAKE,UAAA,GAAG,EAAEC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE;AAAK,UAAA,SAAS,EAAEZ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGa,IAAI,GAAGA,IAAH,GAAUC,QADjB,CAPF,CADF;AAaD,OAdD,MAcO;AACL,eACE,oBAAC,IAAD;AACE,UAAA,EAAE,EAAEZ,EADN;AAEE,wBAAYS,SAFd;AAGE,UAAA,GAAG,EAAEC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE;AAAK,UAAA,SAAS,EAAEZ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGa,IAAI,GAAGA,IAAH,GAAUC,QADjB,CALF,CADF;AAWD;AACF;;AAED,WACE;AACE,MAAA,SAAS,EAAEd,SADb;AAEE,oBAAYW,SAFd;AAGE,MAAA,OAAO,EAAER,OAHX;AAIE,MAAA,IAAI,EAAEF,IAJR;AAKE,MAAA,GAAG,EAAEW,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGC,IAAI,GAAGA,IAAH,GAAUC,QAPjB,CADF;AAWD;;AAtDmC;;AAAhCV,M,CACGL,Y,GAAeA,Y;AAwDxB,eAAeK,MAAf","sourcesContent":["import React, { Component, MouseEvent, RefObject } from 'react';\n\nimport linkIsExternal from 'utils/(to)';\n\nimport { Link } from 'react-router-dom';\n\ntype SharedContentProps = {\n  children: React.ReactNode;\n} | {\n  text: React.ReactNode;\n}\n\ntype SharedProps = SharedContentProps & {\n  className: string,\n  ariaLabel: string,\n};\n\ntype ButtonProps = {\n  onClick(e: MouseEvent<HTMLElement>): void;\n  elemRef?: RefObject<HTMLButtonElement>;\n  type: 'button' | 'submit' | 'reset';\n}\n\ntype InternalLinkProps = {\n  internalTo: string;\n  elemRef?: RefObject<Link>;\n}\n\ntype ExternalLinkProps = {\n  externalTo: string;\n  elemRef?: RefObject<HTMLAnchorElement>;\n}\n\ntype UniqueProps = ButtonProps | InternalLinkProps | ExternalLinkProps;\n\ntype Props = SharedProps & UniqueProps;\n\n\nconst defaultProps = {\n  className: '',\n  type: 'button',\n  to: '',\n  onClick: () => {}\n};\n\nclass Button extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const isInternalLink = 'internalTo' in this.props;\n    const isExternalLink = 'externalTo' in this.props;\n    const isButton = 'onClick' in this.props;\n\n\n    if (isInternalLink) {\n      this.props.internalTo\n    }\n\n    if (to) {\n      if (linkIsExternal(to)) {\n        return (\n          <a\n            href={to}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            aria-label={ariaLabel}\n            ref={elemRef as RefObject<HTMLAnchorElement>}\n          >\n            <div className={className}>\n              {text ? text : children}\n            </div>\n          </a>\n        );\n      } else {\n        return (\n          <Link\n            to={to}\n            aria-label={ariaLabel}\n            ref={elemRef as RefObject<Link>}\n          >\n            <div className={className}>\n              {text ? text : children}\n            </div>\n          </Link>\n        );\n      }\n    }\n\n    return (\n      <button\n        className={className}\n        aria-label={ariaLabel}\n        onClick={onClick}\n        type={type}\n        ref={elemRef as RefObject<HTMLButtonElement>}\n      >\n        {text ? text : children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}