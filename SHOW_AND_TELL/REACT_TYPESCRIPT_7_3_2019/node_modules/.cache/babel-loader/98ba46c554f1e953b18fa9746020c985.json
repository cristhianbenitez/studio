{"ast":null,"code":"var _jsxFileName = \"/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/components/JustAButton.tsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport linkIsExternal from 'utils/linkIsExternal';\nconst defaultProps = {\n  className: '',\n  type: 'button',\n  to: '',\n  onClick: () => {}\n};\n\nclass JustAButton extends Component {\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          type = _this$props.type,\n          ariaLabel = _this$props.ariaLabel,\n          children = _this$props.children,\n          text = _this$props.text,\n          to = _this$props.to,\n          onClick = _this$props.onClick,\n          elemRef = _this$props.elemRef;\n\n    if (to) {\n      if (linkIsExternal(to)) {\n        return React.createElement(\"a\", {\n          href: to,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          \"aria-label\": ariaLabel,\n          ref: elemRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, text ? text : children));\n      } else {\n        return React.createElement(Link, {\n          to: to,\n          \"aria-label\": ariaLabel,\n          ref: elemRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, text ? text : children));\n      }\n    }\n\n    return React.createElement(\"button\", {\n      className: className,\n      \"aria-label\": ariaLabel,\n      onClick: onClick,\n      type: type,\n      ref: elemRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, text ? text : children);\n  }\n\n}\n\nJustAButton.defaultProps = defaultProps;\nexport default AllPurposeButton;","map":{"version":3,"sources":["/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/components/JustAButton.tsx"],"names":["React","Component","Link","linkIsExternal","defaultProps","className","type","to","onClick","JustAButton","render","props","ariaLabel","children","text","elemRef","AllPurposeButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAwD,OAAxD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,IAAI,EAAE,QAFa;AAGnBC,EAAAA,EAAE,EAAE,EAHe;AAInBC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAJE,CAArB;;AAOA,MAAMC,WAAN,SAA0BR,SAA1B,CAA2C;AAGzCS,EAAAA,MAAM,GAAG;AAAA,wBAUH,KAAKC,KAVF;AAAA,UAELN,SAFK,eAELA,SAFK;AAAA,UAGLC,IAHK,eAGLA,IAHK;AAAA,UAILM,SAJK,eAILA,SAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,IANK,eAMLA,IANK;AAAA,UAOLP,EAPK,eAOLA,EAPK;AAAA,UAQLC,OARK,eAQLA,OARK;AAAA,UASLO,OATK,eASLA,OATK;;AAYP,QAAIR,EAAJ,EAAQ;AACN,UAAIJ,cAAc,CAACI,EAAD,CAAlB,EAAwB;AACtB,eACE;AACE,UAAA,IAAI,EAAEA,EADR;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,GAAG,EAAC,qBAHN;AAIE,wBAAYK,SAJd;AAKE,UAAA,GAAG,EAAEG,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE;AAAK,UAAA,SAAS,EAAEV,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,IAAI,GAAGA,IAAH,GAAUD,QADjB,CAPF,CADF;AAaD,OAdD,MAcO;AACL,eACE,oBAAC,IAAD;AACE,UAAA,EAAE,EAAEN,EADN;AAEE,wBAAYK,SAFd;AAGE,UAAA,GAAG,EAAEG,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE;AAAK,UAAA,SAAS,EAAEV,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,IAAI,GAAGA,IAAH,GAAUD,QADjB,CALF,CADF;AAWD;AACF;;AAED,WACE;AACE,MAAA,SAAS,EAAER,SADb;AAEE,oBAAYO,SAFd;AAGE,MAAA,OAAO,EAAEJ,OAHX;AAIE,MAAA,IAAI,EAAEF,IAJR;AAKE,MAAA,GAAG,EAAES,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGD,IAAI,GAAGA,IAAH,GAAUD,QAPjB,CADF;AAWD;;AAxDwC;;AAArCJ,W,CACGL,Y,GAAeA,Y;AA0DxB,eAAeY,gBAAf","sourcesContent":["import React, { Component, MouseEvent, RefObject } from 'react';\nimport { Link } from 'react-router-dom';\nimport linkIsExternal from 'utils/linkIsExternal';\n\ninterface Props {\n  className: string;\n  type?: 'button' | 'submit' | 'reset';\n  ariaLabel: string;\n  children?: React.ReactNode;\n  text?: string;\n  to: string;\n  onClick: () => void;\n  elemRef?: RefObject<HTMLButtonElement>;\n}\n\nconst defaultProps = {\n  className: '',\n  type: 'button',\n  to: '',\n  onClick: () => {}\n};\n\nclass JustAButton extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      type,\n      ariaLabel,\n      children,\n      text,\n      to,\n      onClick,\n      elemRef\n    } = this.props;\n\n    if (to) {\n      if (linkIsExternal(to)) {\n        return (\n          <a\n            href={to}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            aria-label={ariaLabel}\n            ref={elemRef as RefObject<HTMLAnchorElement>}\n          >\n            <div className={className}>\n              {text ? text : children}\n            </div>\n          </a>\n        );\n      } else {\n        return (\n          <Link\n            to={to}\n            aria-label={ariaLabel}\n            ref={elemRef as RefObject<Link>}\n          >\n            <div className={className}>\n              {text ? text : children}\n            </div>\n          </Link>\n        );\n      }\n    }\n\n    return (\n      <button\n        className={className}\n        aria-label={ariaLabel}\n        onClick={onClick}\n        type={type}\n        ref={elemRef as RefObject<HTMLButtonElement>}\n      >\n        {text ? text : children}\n      </button>\n    );\n  }\n}\n\nexport default AllPurposeButton;\n"]},"metadata":{},"sourceType":"module"}