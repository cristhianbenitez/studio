{"ast":null,"code":"var _jsxFileName = \"/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/App.tsx\";\nimport React, { createRef } from 'react';\nimport { AllPurposeButton, RegularButton, IndividuallyTypedButton } from 'components';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.onClickButtonRef = createRef();\n    this.reactLinkRef = createRef();\n    this.externalLinkRef = createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App p1 flex flex-col justify-center items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Using Typescript with React\"), React.createElement(\"h2\", {\n      className: \"mb2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"A Button Rendering Demo\"), React.createElement(\"div\", {\n      className: \"flex flex-col items-center mb2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"This component can render a button, anchor, or Link.\"), React.createElement(AllPurposeButton, {\n      className: \"Button pointer mb1\",\n      ariaLabel: \"Click to alert hola mundo\",\n      onClick: () => alert('hola mundo!'),\n      elemRef: this.onClickButtonRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"AllPurposeButton with onClick\")), React.createElement(AllPurposeButton, {\n      className: \"mb1\",\n      ariaLabel: \"Go to GitHub\",\n      to: \"https://www.github.com\",\n      elemRef: this.externalLinkRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"External link\"))), React.createElement(\"div\", {\n      className: \"flex flex-col items-center mb2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"This component can also render a button, anchor, or Link, with stricter typing.\"), React.createElement(IndividuallyTypedButton, {\n      type: \"button\",\n      className: \"Button pointer mb1\",\n      ariaLabel: \"Click to alert hola mundo\",\n      onClick: () => alert('hola mundo!'),\n      elemRef: this.onClickButtonRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"IndividuallyTypedButton\"))), React.createElement(\"div\", {\n      className: \"flex flex-col items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"This component can only render a button.\"), React.createElement(RegularButton, {\n      type: \"button\",\n      className: \"Button pointer mb1\",\n      ariaLabel: \"Click to alert hola mundo\",\n      onClick: () => alert('hola mundo!'),\n      elemRef: this.onClickButtonRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Regular Button\"))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/mokay/Desktop/code/sanctu-compu/show-and-tell/react-typescript/src/App.tsx"],"names":["React","createRef","AllPurposeButton","RegularButton","IndividuallyTypedButton","App","Component","onClickButtonRef","reactLinkRef","externalLinkRef","render","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,uBAA1C,QAAyE,YAAzE;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,gBADgC,GACbN,SAAS,EADI;AAAA,SAEhCO,YAFgC,GAEjBP,SAAS,EAFQ;AAAA,SAGhCQ,eAHgC,GAGdR,SAAS,EAHK;AAAA;;AAKhCS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,EAGE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,EAEE,oBAAC,gBAAD;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAGE,MAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,aAAD,CAHtB;AAIE,MAAA,OAAO,EAAE,KAAKJ,gBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCANF,CAFF,EAUE,oBAAC,gBAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,EAAE,EAAC,wBAHL;AAIE,MAAA,OAAO,EAAE,KAAKE,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,CAVF,CAHF,EAsBE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADF,EAEE,oBAAC,uBAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,SAAS,EAAC,2BAHZ;AAIE,MAAA,OAAO,EAAE,MAAME,KAAK,CAAC,aAAD,CAJtB;AAKE,MAAA,OAAO,EAAE,KAAKJ,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPF,CAFF,CAtBF,EAkCE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,EAEE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,SAAS,EAAC,2BAHZ;AAIE,MAAA,OAAO,EAAE,MAAMI,KAAK,CAAC,aAAD,CAJtB;AAKE,MAAA,OAAO,EAAE,KAAKJ,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CAFF,CAlCF,CADF;AAiDD;;AAvD+B;;AAwDjC;AAED,eAAeF,GAAf","sourcesContent":["import React, { createRef } from 'react';\nimport { AllPurposeButton, RegularButton, IndividuallyTypedButton } from 'components';\nimport { Link } from 'react-router-dom';\n\nclass App extends React.Component {\n  onClickButtonRef = createRef<HTMLButtonElement>();\n  reactLinkRef = createRef<Link>();\n  externalLinkRef = createRef<HTMLAnchorElement>();\n\n  render() {\n    return (\n      <div className=\"App p1 flex flex-col justify-center items-center\">\n        <h1>Using Typescript with React</h1>\n        <h2 className=\"mb2\">A Button Rendering Demo</h2>\n        <div className=\"flex flex-col items-center mb2\">\n          <p>This component can render a button, anchor, or Link.</p>\n          <AllPurposeButton\n            className=\"Button pointer mb1\"\n            ariaLabel=\"Click to alert hola mundo\"\n            onClick={() => alert('hola mundo!')}\n            elemRef={this.onClickButtonRef}\n          >\n            <p>AllPurposeButton with onClick</p>\n          </AllPurposeButton>\n          <AllPurposeButton\n            className=\"mb1\"\n            ariaLabel=\"Go to GitHub\"\n            to=\"https://www.github.com\"\n            elemRef={this.externalLinkRef}\n          >\n            <p>External link</p>\n          </AllPurposeButton>\n        </div>\n        <div className=\"flex flex-col items-center mb2\">\n          <p>This component can also render a button, anchor, or Link, with stricter typing.</p>\n          <IndividuallyTypedButton\n            type=\"button\"\n            className=\"Button pointer mb1\"\n            ariaLabel=\"Click to alert hola mundo\"\n            onClick={() => alert('hola mundo!')}\n            elemRef={this.onClickButtonRef}\n          >\n            <p>IndividuallyTypedButton</p>\n          </IndividuallyTypedButton>\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <p>This component can only render a button.</p>\n          <RegularButton\n            type=\"button\"\n            className=\"Button pointer mb1\"\n            ariaLabel=\"Click to alert hola mundo\"\n            onClick={() => alert('hola mundo!')}\n            elemRef={this.onClickButtonRef}\n          >\n            <p>Regular Button</p>\n          </RegularButton>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}